// Generated by view binder compiler. Do not edit!
package com.example.nomeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nomeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdateeventBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText UpdateEventBio;

  @NonNull
  public final EditText UpdateEventCity;

  @NonNull
  public final EditText UpdateEventDate;

  @NonNull
  public final Button UpdateEventSaveChanges;

  @NonNull
  public final EditText UpdateEventTime;

  @NonNull
  public final EditText UpdateEventTitle;

  @NonNull
  public final Button UpdateEventUploadImage;

  private ActivityUpdateeventBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText UpdateEventBio, @NonNull EditText UpdateEventCity,
      @NonNull EditText UpdateEventDate, @NonNull Button UpdateEventSaveChanges,
      @NonNull EditText UpdateEventTime, @NonNull EditText UpdateEventTitle,
      @NonNull Button UpdateEventUploadImage) {
    this.rootView = rootView;
    this.UpdateEventBio = UpdateEventBio;
    this.UpdateEventCity = UpdateEventCity;
    this.UpdateEventDate = UpdateEventDate;
    this.UpdateEventSaveChanges = UpdateEventSaveChanges;
    this.UpdateEventTime = UpdateEventTime;
    this.UpdateEventTitle = UpdateEventTitle;
    this.UpdateEventUploadImage = UpdateEventUploadImage;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdateeventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdateeventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_updateevent, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdateeventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.UpdateEvent_Bio;
      EditText UpdateEventBio = ViewBindings.findChildViewById(rootView, id);
      if (UpdateEventBio == null) {
        break missingId;
      }

      id = R.id.UpdateEvent_City;
      EditText UpdateEventCity = ViewBindings.findChildViewById(rootView, id);
      if (UpdateEventCity == null) {
        break missingId;
      }

      id = R.id.UpdateEvent_Date;
      EditText UpdateEventDate = ViewBindings.findChildViewById(rootView, id);
      if (UpdateEventDate == null) {
        break missingId;
      }

      id = R.id.UpdateEvent_SaveChanges;
      Button UpdateEventSaveChanges = ViewBindings.findChildViewById(rootView, id);
      if (UpdateEventSaveChanges == null) {
        break missingId;
      }

      id = R.id.UpdateEvent_Time;
      EditText UpdateEventTime = ViewBindings.findChildViewById(rootView, id);
      if (UpdateEventTime == null) {
        break missingId;
      }

      id = R.id.UpdateEvent_Title;
      EditText UpdateEventTitle = ViewBindings.findChildViewById(rootView, id);
      if (UpdateEventTitle == null) {
        break missingId;
      }

      id = R.id.UpdateEvent_UploadImage;
      Button UpdateEventUploadImage = ViewBindings.findChildViewById(rootView, id);
      if (UpdateEventUploadImage == null) {
        break missingId;
      }

      return new ActivityUpdateeventBinding((ConstraintLayout) rootView, UpdateEventBio,
          UpdateEventCity, UpdateEventDate, UpdateEventSaveChanges, UpdateEventTime,
          UpdateEventTitle, UpdateEventUploadImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
