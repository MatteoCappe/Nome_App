// Generated by view binder compiler. Do not edit!
package com.example.nomeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nomeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityShowprofileBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ListView ShowProfileEventList;

  @NonNull
  public final Button ShowProfileFollowUnfollowButton;

  @NonNull
  public final TextView ShowProfileFollowers;

  @NonNull
  public final TextView ShowProfileFollowing;

  @NonNull
  public final TextView ShowProfileName;

  @NonNull
  public final ImageView ShowProfileProfileImage;

  @NonNull
  public final TextView ShowProfileSurname;

  @NonNull
  public final TextView ShowProfileUsername;

  @NonNull
  public final LinearLayout ShowProfileViewFollowers;

  @NonNull
  public final LinearLayout ShowProfileViewFollowing;

  private ActivityShowprofileBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ListView ShowProfileEventList, @NonNull Button ShowProfileFollowUnfollowButton,
      @NonNull TextView ShowProfileFollowers, @NonNull TextView ShowProfileFollowing,
      @NonNull TextView ShowProfileName, @NonNull ImageView ShowProfileProfileImage,
      @NonNull TextView ShowProfileSurname, @NonNull TextView ShowProfileUsername,
      @NonNull LinearLayout ShowProfileViewFollowers,
      @NonNull LinearLayout ShowProfileViewFollowing) {
    this.rootView = rootView;
    this.ShowProfileEventList = ShowProfileEventList;
    this.ShowProfileFollowUnfollowButton = ShowProfileFollowUnfollowButton;
    this.ShowProfileFollowers = ShowProfileFollowers;
    this.ShowProfileFollowing = ShowProfileFollowing;
    this.ShowProfileName = ShowProfileName;
    this.ShowProfileProfileImage = ShowProfileProfileImage;
    this.ShowProfileSurname = ShowProfileSurname;
    this.ShowProfileUsername = ShowProfileUsername;
    this.ShowProfileViewFollowers = ShowProfileViewFollowers;
    this.ShowProfileViewFollowing = ShowProfileViewFollowing;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityShowprofileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityShowprofileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_showprofile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityShowprofileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ShowProfile_EventList;
      ListView ShowProfileEventList = ViewBindings.findChildViewById(rootView, id);
      if (ShowProfileEventList == null) {
        break missingId;
      }

      id = R.id.ShowProfile_FollowUnfollowButton;
      Button ShowProfileFollowUnfollowButton = ViewBindings.findChildViewById(rootView, id);
      if (ShowProfileFollowUnfollowButton == null) {
        break missingId;
      }

      id = R.id.ShowProfile_Followers;
      TextView ShowProfileFollowers = ViewBindings.findChildViewById(rootView, id);
      if (ShowProfileFollowers == null) {
        break missingId;
      }

      id = R.id.ShowProfile_Following;
      TextView ShowProfileFollowing = ViewBindings.findChildViewById(rootView, id);
      if (ShowProfileFollowing == null) {
        break missingId;
      }

      id = R.id.ShowProfile_Name;
      TextView ShowProfileName = ViewBindings.findChildViewById(rootView, id);
      if (ShowProfileName == null) {
        break missingId;
      }

      id = R.id.ShowProfile_profileImage;
      ImageView ShowProfileProfileImage = ViewBindings.findChildViewById(rootView, id);
      if (ShowProfileProfileImage == null) {
        break missingId;
      }

      id = R.id.ShowProfile_Surname;
      TextView ShowProfileSurname = ViewBindings.findChildViewById(rootView, id);
      if (ShowProfileSurname == null) {
        break missingId;
      }

      id = R.id.ShowProfile_Username;
      TextView ShowProfileUsername = ViewBindings.findChildViewById(rootView, id);
      if (ShowProfileUsername == null) {
        break missingId;
      }

      id = R.id.ShowProfile_ViewFollowers;
      LinearLayout ShowProfileViewFollowers = ViewBindings.findChildViewById(rootView, id);
      if (ShowProfileViewFollowers == null) {
        break missingId;
      }

      id = R.id.ShowProfile_ViewFollowing;
      LinearLayout ShowProfileViewFollowing = ViewBindings.findChildViewById(rootView, id);
      if (ShowProfileViewFollowing == null) {
        break missingId;
      }

      return new ActivityShowprofileBinding((CoordinatorLayout) rootView, ShowProfileEventList,
          ShowProfileFollowUnfollowButton, ShowProfileFollowers, ShowProfileFollowing,
          ShowProfileName, ShowProfileProfileImage, ShowProfileSurname, ShowProfileUsername,
          ShowProfileViewFollowers, ShowProfileViewFollowing);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
