// Generated by view binder compiler. Do not edit!
package com.example.nomeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nomeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddeventBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText Bio;

  @NonNull
  public final EditText City;

  @NonNull
  public final Button CreateEvent;

  @NonNull
  public final EditText EventDate;

  @NonNull
  public final EditText EventTime;

  @NonNull
  public final EditText EventTitle;

  private ActivityAddeventBinding(@NonNull ConstraintLayout rootView, @NonNull EditText Bio,
      @NonNull EditText City, @NonNull Button CreateEvent, @NonNull EditText EventDate,
      @NonNull EditText EventTime, @NonNull EditText EventTitle) {
    this.rootView = rootView;
    this.Bio = Bio;
    this.City = City;
    this.CreateEvent = CreateEvent;
    this.EventDate = EventDate;
    this.EventTime = EventTime;
    this.EventTitle = EventTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddeventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddeventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_addevent, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddeventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Bio;
      EditText Bio = ViewBindings.findChildViewById(rootView, id);
      if (Bio == null) {
        break missingId;
      }

      id = R.id.City;
      EditText City = ViewBindings.findChildViewById(rootView, id);
      if (City == null) {
        break missingId;
      }

      id = R.id.CreateEvent;
      Button CreateEvent = ViewBindings.findChildViewById(rootView, id);
      if (CreateEvent == null) {
        break missingId;
      }

      id = R.id.EventDate;
      EditText EventDate = ViewBindings.findChildViewById(rootView, id);
      if (EventDate == null) {
        break missingId;
      }

      id = R.id.EventTime;
      EditText EventTime = ViewBindings.findChildViewById(rootView, id);
      if (EventTime == null) {
        break missingId;
      }

      id = R.id.EventTitle;
      EditText EventTitle = ViewBindings.findChildViewById(rootView, id);
      if (EventTitle == null) {
        break missingId;
      }

      return new ActivityAddeventBinding((ConstraintLayout) rootView, Bio, City, CreateEvent,
          EventDate, EventTime, EventTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
