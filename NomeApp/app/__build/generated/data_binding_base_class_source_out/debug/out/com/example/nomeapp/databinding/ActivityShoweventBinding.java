// Generated by view binder compiler. Do not edit!
package com.example.nomeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nomeapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityShoweventBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final TextView ShowEventBio;

  @NonNull
  public final TextView ShowEventCity;

  @NonNull
  public final TextView ShowEventDate;

  @NonNull
  public final ImageView ShowEventEventImage;

  @NonNull
  public final Button ShowEventFollowUnfollowButton;

  @NonNull
  public final TextView ShowEventTitle;

  @NonNull
  public final CardView ShowEventUserBox;

  @NonNull
  public final TextView ShowEventUserBoxName;

  @NonNull
  public final ImageView ShowEventUserBoxPhoto;

  @NonNull
  public final TextView ShowEventUserBoxSurname;

  @NonNull
  public final TextView ShowEventUserBoxUsername;

  @NonNull
  public final FragmentContainerView showMyEventFragment;

  private ActivityShoweventBinding(@NonNull CoordinatorLayout rootView,
      @NonNull TextView ShowEventBio, @NonNull TextView ShowEventCity,
      @NonNull TextView ShowEventDate, @NonNull ImageView ShowEventEventImage,
      @NonNull Button ShowEventFollowUnfollowButton, @NonNull TextView ShowEventTitle,
      @NonNull CardView ShowEventUserBox, @NonNull TextView ShowEventUserBoxName,
      @NonNull ImageView ShowEventUserBoxPhoto, @NonNull TextView ShowEventUserBoxSurname,
      @NonNull TextView ShowEventUserBoxUsername,
      @NonNull FragmentContainerView showMyEventFragment) {
    this.rootView = rootView;
    this.ShowEventBio = ShowEventBio;
    this.ShowEventCity = ShowEventCity;
    this.ShowEventDate = ShowEventDate;
    this.ShowEventEventImage = ShowEventEventImage;
    this.ShowEventFollowUnfollowButton = ShowEventFollowUnfollowButton;
    this.ShowEventTitle = ShowEventTitle;
    this.ShowEventUserBox = ShowEventUserBox;
    this.ShowEventUserBoxName = ShowEventUserBoxName;
    this.ShowEventUserBoxPhoto = ShowEventUserBoxPhoto;
    this.ShowEventUserBoxSurname = ShowEventUserBoxSurname;
    this.ShowEventUserBoxUsername = ShowEventUserBoxUsername;
    this.showMyEventFragment = showMyEventFragment;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityShoweventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityShoweventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_showevent, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityShoweventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ShowEvent_Bio;
      TextView ShowEventBio = ViewBindings.findChildViewById(rootView, id);
      if (ShowEventBio == null) {
        break missingId;
      }

      id = R.id.ShowEvent_City;
      TextView ShowEventCity = ViewBindings.findChildViewById(rootView, id);
      if (ShowEventCity == null) {
        break missingId;
      }

      id = R.id.ShowEvent_Date;
      TextView ShowEventDate = ViewBindings.findChildViewById(rootView, id);
      if (ShowEventDate == null) {
        break missingId;
      }

      id = R.id.ShowEvent_eventImage;
      ImageView ShowEventEventImage = ViewBindings.findChildViewById(rootView, id);
      if (ShowEventEventImage == null) {
        break missingId;
      }

      id = R.id.ShowEvent_FollowUnfollowButton;
      Button ShowEventFollowUnfollowButton = ViewBindings.findChildViewById(rootView, id);
      if (ShowEventFollowUnfollowButton == null) {
        break missingId;
      }

      id = R.id.ShowEvent_Title;
      TextView ShowEventTitle = ViewBindings.findChildViewById(rootView, id);
      if (ShowEventTitle == null) {
        break missingId;
      }

      id = R.id.ShowEvent_UserBox;
      CardView ShowEventUserBox = ViewBindings.findChildViewById(rootView, id);
      if (ShowEventUserBox == null) {
        break missingId;
      }

      id = R.id.ShowEvent_UserBox_Name;
      TextView ShowEventUserBoxName = ViewBindings.findChildViewById(rootView, id);
      if (ShowEventUserBoxName == null) {
        break missingId;
      }

      id = R.id.ShowEvent_UserBox_Photo;
      ImageView ShowEventUserBoxPhoto = ViewBindings.findChildViewById(rootView, id);
      if (ShowEventUserBoxPhoto == null) {
        break missingId;
      }

      id = R.id.ShowEvent_UserBox_Surname;
      TextView ShowEventUserBoxSurname = ViewBindings.findChildViewById(rootView, id);
      if (ShowEventUserBoxSurname == null) {
        break missingId;
      }

      id = R.id.ShowEvent_UserBox_Username;
      TextView ShowEventUserBoxUsername = ViewBindings.findChildViewById(rootView, id);
      if (ShowEventUserBoxUsername == null) {
        break missingId;
      }

      id = R.id.showMyEventFragment;
      FragmentContainerView showMyEventFragment = ViewBindings.findChildViewById(rootView, id);
      if (showMyEventFragment == null) {
        break missingId;
      }

      return new ActivityShoweventBinding((CoordinatorLayout) rootView, ShowEventBio, ShowEventCity,
          ShowEventDate, ShowEventEventImage, ShowEventFollowUnfollowButton, ShowEventTitle,
          ShowEventUserBox, ShowEventUserBoxName, ShowEventUserBoxPhoto, ShowEventUserBoxSurname,
          ShowEventUserBoxUsername, showMyEventFragment);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
